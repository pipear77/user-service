<?xml version="1.0" encoding="UTF-8"?>
<coverage>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='contrasena(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='direccion(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;clinit&gt;()V' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='telefono(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='builder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='builder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='existsByEmail(Ljava/lang/String;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='14'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='13'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='12'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='11'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='nombres(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='numeroDocumento(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='salarioBase(Ljava/math/BigDecimal;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='&lt;init&gt;(Ljava/util/UUID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/time/LocalDate;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/math/BigDecimal;Ljava/util/UUID;)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='usuarioValido(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='&lt;init&gt;(Ljava/util/UUID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/time/LocalDate;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/math/BigDecimal;Ljava/util/UUID;)V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='existsByEmail(Ljava/lang/String;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeFallar_siCorreoYaExiste$2(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Throwable;)V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeFallar_siCorreoYaExiste$2(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Throwable;)V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeFallar_siCorreoYaExiste$2(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Throwable;)V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeFallar_siCorreoYaExiste$2(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Throwable;)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeFallar_siCorreoYaExiste$2(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Throwable;)V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.CorreoYaRegistradoException' method='&lt;init&gt;(Ljava/lang/String;)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.CorreoYaRegistradoException' method='&lt;init&gt;(Ljava/lang/String;)V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='13'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='12'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='11'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='16'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='&lt;init&gt;()V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='15'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.CorreoElectronico' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='14'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='save(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='getApellidos()Ljava/lang/String;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='lambda$validar$0(Lco/com/pragma/model/usuario/Usuario;Lco/com/pragma/usecase/common/validacion/UsuarioValidacion;)Lorg/reactivestreams/Publisher;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='lambda$validar$0(Lco/com/pragma/model/usuario/Usuario;Lco/com/pragma/usecase/common/validacion/UsuarioValidacion;)Lorg/reactivestreams/Publisher;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='&lt;init&gt;(Lco/com/pragma/model/usuario/gateways/UsuarioRepository;Lco/com/pragma/model/usuario/gateways/PasswordEncoderRepository;Lco/com/pragma/model/usuario/gateways/JwtProviderRepository;)V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='lambda$validar$0(Lco/com/pragma/model/usuario/Usuario;Lco/com/pragma/usecase/common/validacion/UsuarioValidacion;)Lorg/reactivestreams/Publisher;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='&lt;init&gt;(Lco/com/pragma/model/usuario/gateways/UsuarioRepository;Lco/com/pragma/model/usuario/gateways/PasswordEncoderRepository;Lco/com/pragma/model/usuario/gateways/JwtProviderRepository;)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='lambda$validar$0(Lco/com/pragma/model/usuario/Usuario;Lco/com/pragma/usecase/common/validacion/UsuarioValidacion;)Lorg/reactivestreams/Publisher;' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='getNombres()Ljava/lang/String;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='correoElectronico(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.NumeroDocumento' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='17'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='16'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='19'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='18'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='17'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='11'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='16'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='11'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='13'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='idRol(Ljava/util/UUID;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='12'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='15'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeFallar_siCorreoYaExiste()V' number='14'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='setMockitoInterceptor(Lorg/mockito/internal/creation/bytebuddy/access/MockMethodInterceptor;)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='getSalarioBase()Ljava/math/BigDecimal;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Salario' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='agregarValidacion(Lco/com/pragma/usecase/common/validacion/UsuarioValidacion;)Lco/com/pragma/usecase/common/UsuarioValidationPipeline;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.UsuarioValidationPipeline' method='agregarValidacion(Lco/com/pragma/usecase/common/validacion/UsuarioValidacion;)Lco/com/pragma/usecase/common/UsuarioValidationPipeline;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='fechaNacimiento(Ljava/time/LocalDate;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='apellidos(Ljava/lang/String;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='getCorreoElectronico()Ljava/lang/String;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='build()Lco/com/pragma/model/usuario/Usuario;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='getNumeroDocumento()Ljava/lang/String;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='build()Lco/com/pragma/model/usuario/Usuario;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.UsuarioRepository$MockitoMock$I8WfYdLe' method='setMockitoInterceptor(Lorg/mockito/internal/creation/bytebuddy/access/MockMethodInterceptor;)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Apellido' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeFallar_siCorreoYaExiste()]'/>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='&lt;clinit&gt;()V' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='19'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='18'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='17'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='16'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='11'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='15'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='14'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='13'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='pipeline_debeFallar_siNombreEsVacio()V' number='12'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$pipeline_debeFallar_siNombreEsVacio$3(Ljava/lang/Throwable;)V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$pipeline_debeFallar_siNombreEsVacio$3(Ljava/lang/Throwable;)V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$pipeline_debeFallar_siNombreEsVacio$3(Ljava/lang/Throwable;)V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.common.validacion.fields.Nombre' method='validar(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$pipeline_debeFallar_siNombreEsVacio$3(Ljava/lang/Throwable;)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='getCodigo()I' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='&lt;init&gt;(Ljava/lang/String;II)V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.error.CodigosEstadoHttp' method='&lt;init&gt;(Ljava/lang/String;II)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.CampoObligatorioException' method='&lt;init&gt;(Ljava/lang/String;I)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.exceptions.CampoObligatorioException' method='&lt;init&gt;(Ljava/lang/String;I)V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:pipeline_debeFallar_siNombreEsVacio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='existsByEmail(Ljava/lang/String;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='existsByEmail(Ljava/lang/String;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='11'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='12'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='existsByEmail_delegaEnRepositorio()V' number='13'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:existsByEmail_delegaEnRepositorio()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$0(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$0(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$0(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$0(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$0(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$0(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$0(Lco/com/pragma/model/usuario/Usuario;)Lreactor/core/publisher/Mono;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='getId()Ljava/util/UUID;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario$UsuarioBuilder' method='id(Ljava/util/UUID;)Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='17'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='18'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='15'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='16'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='13'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='14'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='11'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='12'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='25'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='26'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='23'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='24'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='21'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='22'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='19'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='20'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='33'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='34'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='31'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='32'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='29'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='30'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='27'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='28'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='35'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='save_debeGuardarUsuario_siCorreoNoExiste()V' number='36'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCase' method='lambda$save$1(Lco/com/pragma/model/usuario/Usuario;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='encode(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.gateways.PasswordEncoderRepository$MockitoMock$hnT3sGZe' method='encode(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='10'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='9'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='8'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='7'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='12'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='11'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='getContrasena()Ljava/lang/String;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$0(Ljava/util/UUID;Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$0(Ljava/util/UUID;Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$0(Ljava/util/UUID;Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$0(Ljava/util/UUID;Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$0(Ljava/util/UUID;Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$0(Ljava/util/UUID;Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$0(Ljava/util/UUID;Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$1(Ljava/util/UUID;Lco/com/pragma/model/usuario/Usuario;)V' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$1(Ljava/util/UUID;Lco/com/pragma/model/usuario/Usuario;)V' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$1(Ljava/util/UUID;Lco/com/pragma/model/usuario/Usuario;)V' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$1(Ljava/util/UUID;Lco/com/pragma/model/usuario/Usuario;)V' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$1(Ljava/util/UUID;Lco/com/pragma/model/usuario/Usuario;)V' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$1(Ljava/util/UUID;Lco/com/pragma/model/usuario/Usuario;)V' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest' method='lambda$save_debeGuardarUsuario_siCorreoNoExiste$1(Ljava/util/UUID;Lco/com/pragma/model/usuario/Usuario;)V' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='2'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='1'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='0'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='6'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='5'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='4'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.usuario.Usuario' method='toBuilder()Lco/com/pragma/model/usuario/Usuario$UsuarioBuilder;' number='3'><tests>
<test name='co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest.[engine:junit-jupiter]/[class:co.com.pragma.usecase.registrarusuario.RegistrarUsuarioUseCaseTest]/[method:save_debeGuardarUsuario_siCorreoNoExiste()]'/>
</tests>
</block>
</coverage>
